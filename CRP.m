function [V,idx,MU,SIGMA] = CRP(N, alpha, mu0, lambda, Psi, nu)
% Input:
% N:      number of data points to be generated,
% alpha:  concentration parameter,
% mu0:    location vector,
% lambda: mean fraction,
% Psi:    inverse scale matrix,
% nu:     degrees of freedom.
% Output:
% V:      data vector,
% idx:    index vector which process generated the sample,
% MU:     array of the means of all processes,
% SIGMAS: array of the covariance matrices of all processes.

% Generate distribution of first process.
SIGMA = iwishrnd(Psi,nu);
MU =  mvnrnd(mu0,lambda * SIGMA);
% Generate first sample.
V = mvnrnd(MU,SIGMA);
idx = 1;             
% The vector n_k tracks the number of samples generated by the k-th
% process, where k is the vector index.
n_k = 1; 
for n =2:N
    % Calculate probabilities which process generates the next sample.
    p = n_k/(n-1+alpha);
    % Append the probability that a new process is generated.
    p = cat(1,p,alpha/(n-1+alpha));
    % Sample from which process the next data point is taken or
    % whether a new process is created.
    compidx = randsample(length(p),1,true,p/sum(p));
    if compidx < length(p)
        % New sample is generated from existing process indicated by 
        % compidx. Generate new sample from this process.
        V = cat(1,V,mvnrnd(MU(compidx,:),SIGMA(:,:,compidx)));
        idx = cat(1,idx,compidx);
        % Update vector n_k of the number of samples generated by each
        % process.
        n_k(compidx) = n_k(compidx)+1;
    else
        % New process is generated.
        sigma = iwishrnd(Psi,nu);
        mu =  mvnrnd(mu0,lambda * sigma);
        % Generate new sample from this process.
        V = cat(1,V,mvnrnd(mu,sigma));
        idx = cat(1,idx,compidx);
        % Append mean and covariance matrix of new process to arrays
        % of means and covariances.
        MU = cat(1,MU,mu);
        SIGMA = cat(3,SIGMA,sigma);
        % Update vector n_k of the number of samples generated by each
        % process.
        n_k = cat(1,n_k,1);
    end
end
